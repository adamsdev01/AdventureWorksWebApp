@page "/Employees"

<br />
<div class="alert alert-primary" role="alert">
    <h3 style="text-align:center;">Employees</h3>
</div>
@if (IsLoading)
{
    <div class="employee-loading">
        <TelerikLoader Visible="@LoaderVisible"
                       Size="@ThemeConstants.Loader.Size.Large"
                       ThemeColor="@ThemeConstants.Loader.ThemeColor.Primary"
                       Type="@LoaderType.ConvergingSpinner" />
    </div>
}
else
{
    <TelerikGrid Data="@EmployeeData"
                 Height="100%"
                 PageSize="10"
                 Pageable="true" Sortable="true"
                 FilterMode="@GridFilterMode.FilterRow">
        <GridToolBar>
            <TelerikButton OnClick="@OnClickCreate" Icon="add" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">New Employee</TelerikButton>
        </GridToolBar>
        <GridColumns>
            <GridColumn Field="@nameof(EmployeeViewModel.FullName)" Title="Employee Name" />
            <GridColumn Field="@nameof(EmployeeViewModel.JobTitle)" Title="Job Title" />
            <GridColumn Field="@nameof(EmployeeViewModel.HireDate)" DisplayFormat="{0:MMM-dd-yyyy}" Title="Hire Date" />
            <GridColumn Field="@nameof(EmployeeViewModel.IsSalaried)" Title="Salaried" >
                <Template>
                    @{
                        var e = (EmployeeViewModel)context;
                        @if(e.IsSalaried.Equals(true))
                        {
                            <span>
                                <h6><span class="badge bg-success">Yes</span></h6>
                            </span>
                        }
                        else if (e.IsSalaried.Equals(false))
                        {
                            <span>
                                <h6><span class="badge bg-warning">No</span></h6>
                            </span>
                        }
                    }
                </Template>
            </GridColumn>
            <GridCommandColumn Title="Actions">
                <GridCommandButton OnClick="(args)=> OnClickEmployeeSelected(args)" Title="View" Icon="checkmark" ThemeColor="@ThemeConstants.Button.ThemeColor.Warning"></GridCommandButton>
            </GridCommandColumn>
        </GridColumns>
    </TelerikGrid>
    
}
<br />
<br />


@code {

    public List<EmployeeViewModel>? EmployeeData { get; set; }
    public int BusinessEntityId { get; set; }

    public bool IsLoading { get; set; }
    public bool LoaderVisible { get; set;  }

    public async Task GetGridData()
    {
        IsLoading = true;
        LoaderVisible = true;
        await Task.Delay(1);
        EmployeeData = await _hrService.GetAllEmployeesDataAsListAsync();
        IsLoading = false;
        LoaderVisible = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await GetGridData();
    }

    public void OnClickCreate()
    {
        _navigationManager.NavigateTo("/NewEmployee");
    }

    public void OnClickEmployeeSelected(GridCommandEventArgs args)
    {
        EmployeeViewModel item = (EmployeeViewModel)args.Item;
        _navigationManager.NavigateTo("/ViewEmployee/Id/" + item.BusinessEntityId);
    }
}
